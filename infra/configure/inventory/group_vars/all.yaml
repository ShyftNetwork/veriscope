controller_working_dir: "{{ lookup('env', 'PWD') }}"

veriscope_common_name: "{{ inventory_hostname_short }}"
veriscope_service_hostname: "{{ inventory_hostname }}"
service_user: "{{ ansible_facts['env']['LOGNAME'] }}"

veriscope_nm_services: [ nethermind ]
veriscope_web_prereq_services: [ nginx, redis-server ]
veriscope_web_services: [ ta, ta-queue, ta-wss, ta-schedule, horizon, ta-node-1 ]

# Location to install veriscope to. Default is /opt/veriscope which is the ONLY possible
# place to install for now as it is hardcoded everywhere in php and nodejs code. 
# Subsequent paths are derived from install_root
install_root: /opt/veriscope
api_root: "{{ install_root }}/veriscope_ta_node"
api_config_path: "{{ api_root }}/.env"
dashboard_root: "{{ install_root }}/veriscope_ta_dashboard"
dashboard_config_path: "{{ dashboard_root }}/.env"
addressproofs_root: "{{ install_root }}/veriscope_addressproof"

# ssh_priv_key_secret_name: /{{ owner | lower }}/{{ env | lower }}/instances/{{ inventory_hostname }}


# aws_region: us-east-1
# aws_profile: default

# ta_dashboard_db_cluster_secret_name: "/{{ env | lower }}/common/ta-db-cluster"
# # The details of the PostgreSQL cluster where the TrustAnchor database is to be created
# ta_dashboard_db_cluster: "{{ lookup('amazon.aws.aws_secret', ta_dashboard_db_cluster_secret_name, bypath=true,
#                           region=aws_region, aws_profile=aws_profile)[ta_dashboard_db_cluster_secret_name] }}"
# pgsql_cltr_host: "{{ ta_dashboard_db_cluster['cluster_endpoint'] }}"
# pgsql_cltr_port: "{{ ta_dashboard_db_cluster['cluster_port'] }}"
# ta_db_name: "trustanchor-{{ inventory_hostname_short }}"
# ta_db_user: "trustanchor-{{ inventory_hostname_short }}"
# ta_db_user_pwd_secret_name: /{{ owner | lower }}/{{ env | lower }}/instances/{{ ta_db_user }}

ansible_host_key_checking: false
ansible_ssh_pipelining: true
ansible_user: veris
# Path to the SSH private key for the veris user
ansible_ssh_private_key_file: ~/.ssh/{{ inventory_hostname }}.pem
# ansible_ssh_private_key_file: ~/.ssh/veris_rsa
# ansible_host: "{{ private_ip }}"

nm_root: /opt/nm
nm_config_dest_path: "{{ nm_root }}/config.cfg"
target_nethermind_version: 1.20.4
nethermind_rpc: http://localhost:8545
network_facts:
  veriscope_testnet:
    ethstats_get_enodes: "wss://fedstats.veriscope.network/primus/?_primuscb=1627594389337-0"
    ethstats_host: "wss://fedstats.veriscope.network/api"
    ethstats_secret: Oogongi4
    nm_db_backup_bucket_url: "https://backups.veriscope.org"
    nm_db_backup_bucket_name: "backups.veriscope.org"
    rpc_endpoint: https://tx.veriscope.network
  fed_testnet:
    ethstats_get_enodes: "wss://stats.testnet.shyft.network/primus/?_primuscb=1627594389337-0"
    ethstats_host: "wss://stats.testnet.shyft.network/api"
    ethstats_secret: Ish9phieph
    nm_db_backup_bucket_url: "https://backups.veriscope.network"
    nm_db_backup_bucket_name: "backups.veriscope.network"
    rpc_endpoint: https://rpc.testnet.shyft.network
  fed_mainnet:
    ethstats_get_enodes: "wss://stats.shyft.network/primus/?_primuscb=1627594389337-0"
    ethstats_host: "wss://stats.shyft.network/api"
    ethstats_secret: uL4tohChia
    nm_db_backup_bucket_url: "https://backups.veriscope.network"
    nm_db_backup_bucket_name: "backups.veriscope.network"
    rpc_endpoint: https://rpc.shyft.network
