---
- name: Stop all services and backup configs
  hosts: web
  gather_facts: true
  vars:
    # controller_dt: "{{ lookup('pipe','date +%Y-%m-%d-%H-%M-%S') }}"
    file_timestamp: "{{ ansible_date_time.iso8601_basic_short }}"
  tasks:
    - name: Stop veriscope services - Update veriscope
      ansible.builtin.service:
        name: "{{ item }}"
        state: stopped
      ignore_errors: false
      become: true
      with_items: "{{ veriscope_web_services }}"

    - name: Set file_timestamp fact - Update veriscope
      ansible.builtin.set_fact:
        file_timestamp: "{{ file_timestamp }}"

    - name: Backup config files for safety reasons!
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        remote_src: true
        owner: veris
        group: veris
        force: true
      with_items:
        - { src: "{{ dashboard_config_path }}",
            dest: "{{ dashboard_config_path }}-{{ file_timestamp }}.backup" }
        - { src: "{{ api_config_path }}",
            dest: "{{ api_config_path }}-{{ file_timestamp }}.backup" }
      become: true

- name: Copy code onto the target host - Update veriscope
  ansible.builtin.import_playbook: prepare-git.yaml
  vars:
    operation: update

- name: Restore backed up configs - Update veriscope
  hosts: web
  gather_facts: false
  tasks:
    - name: Restore backed up configs
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        remote_src: true
        owner: veris
        group: veris
        force: true
      with_items:
        - { dest: "{{ dashboard_config_path }}",
            src: "{{ dashboard_config_path }}-{{ file_timestamp }}.backup" }
        - { dest: "{{ api_config_path }}",
            src: "{{ api_config_path }}-{{ file_timestamp }}.backup" }
      become: true

- name: Update operation on TA API
  ansible.builtin.import_playbook: install-ta-api.yaml
  when: "'api' in apps_to_update"
  vars:
    operation: update

- name: Update operation on TA dashboard webapp
  ansible.builtin.import_playbook: install-ta-dashboard-webapp.yaml
  when: "'dashboard' in apps_to_update"
  vars:
    operation: update

- name: Restart all services - Update veriscope
  ansible.builtin.import_playbook: restart-services.yaml
