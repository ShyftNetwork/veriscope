/*
Inputs

For more complex forms like the registration wizard.

Markup:
<form action="#">
	<div class="form-control">
    <label>Email</label>
		<input type="email" required>
	</div>
	<div class="form-control">
    <label>Name</label>
		<input type="text">
	</div>
  <div class="form-control">
    <label>Error state</label>
		<input type="text" class="parsley-error">
	</div>
</form>

Styleguide _Forms.Inputs
*/

input[type=text] {
  border: 1px solid config('colors.peach');
  &:-webkit-autofill {
    //-webkit-box-shadow: 0 0 0px 1000px config('colors.white') inset;
  }
}

.form-control {
  padding-top: 25px;
	margin-bottom: 20px;
  position: relative;

  .error-message {
    @apply text-sm;
    display: flex;
    align-items: center;
  }

	input {
    @apply font-headline leading-none px-4 py-2 w-full text-base;
    line-height: 1.2; // Added for autofill crop fix
    padding-top: .6rem;
    padding-bottom: .7rem;
		border-color: config('colors.gray');
    border-width: 1px;
    border-style: solid;
		display: block;
		//padding: 5px 10px;
		position: relative;
    transition: border .3s ease-in-out;
		&.error {
			border-color: config('colors.red');
			//+ label { color: config('colors.peach'); }
		}
    &:focus {
      outline: none;
      border-color: config('colors.peach');
    }
    &:disabled {
      @apply bg-transparent;
    }
	}
	label {
        @apply
            tracking-big;
		transition: all 0.3s;
		display: block;
    font-family: "NeuzitGrotesk";
    font-weight: bold;
    line-height: 19px;
    @apply mb-2 text-base;
	}
}

.bg-peach, .bg-plum {
  input {
    border-color: config('colors.white');
    @apply text-white;
    &:focus {
      outline: none;
      border-color: config('colors.white');
    }
  }
  .form-control input.error {
    border-color: config('colors.white');
  }
  .error-message {
    svg {
      border: 1px solid white;
      border-radius: 50%;
    }
    @apply text-white;
  }
}

.kss-toolbar a {
  &:after {
    display: none;
  }
}

/*
Inputs (Simple)

Your simple input types used on logins and forgot password flows.

Markup:
<form action="#">
	<div class="form-control form-control--simple">
		<input type="email" placeholder="your@email.com" required>
		<label>Email <span class="label__optional">optional</span></label>
	</div>
	<div class="form-control form-control--simple">
		<input type="text">
		<label>Name</label>
	</div>
  <div class="form-control form-control--simple">
		<input type="text" class="parsley-error">
		<label>Error state</label>
	</div>
</form>
<script>
// Add a class whenever the input has some content/value.
[].forEach.call(document.querySelectorAll('.form-control--simple input'), function(input,i) {
	input.addEventListener('keyup', function(e) {
		input.classList.toggle('has-value', input.value !== '');
	});
});
</script>

Styleguide _Forms.Inputs (simple)
*/
@keyframes onAutoFillStart {
  from {/**/}
  to {/**/}
}

@keyframes onAutoFillCancel {
  from {/**/}
  to {/**/}
}

.form-control--simple {
  label {
    left: 0;
    position: absolute;
		top: 42px;
    left: 0;
    font-weight: normal;
  }
  .error-message {
    margin-bottom: 2em;
  }
  input {
    border-top: none;
    border-left: none;
    border-right: none;
    padding-left: 0;
    margin-bottom: 2em;
    border-radius: 0px;
    @apply bg-transparent;
    &.error {
      margin-bottom: 0;
    }
    &:focus + label {
      top: 5px;
      left: 0;
      font-weight: bold;
    }
    &.has-value + label {
      top: 5px;
      left: 0;
      font-weight: bold;
    }
    &:-webkit-autofill {
      // Expose a hook for JavaScript when auto fill is shown.
      // JavaScript can capture 'animationstart' events
      animation-name: onAutoFillStart;

      // Make the backgound color become yellow _really slowly_
      transition: background-color 50000s ease-in-out 0s;
    }

    &:not(:-webkit-autofill) {
      // Expose a hook for JS onAutoFillCancel
      // JavaScript can capture 'animationstart' events
      animation-name: onAutoFillCancel;
    }
  }
}
/**
General input placeholder
*/
::-webkit-input-placeholder { /* Chrome/Opera/Safari */
  @apply text-base;
  padding-top: 5px; // Added for Safari specifically
}
::-moz-placeholder { /* Firefox 19+ */
  @apply text-base;
}
:-ms-input-placeholder { /* IE 10+ */
  @apply text-base;
}
:-moz-placeholder { /* Firefox 18- */
  @apply text-base;
}
/**
Used to position an "optional" flag for form
fields. Applied to a child of the label element.
*/
label {
  .label__optional {
      float: right;
      font-weight: normal;
  }
}
